- title @view_model.title

h1.h3 = @view_model.title

p.mb1 == t('idv.messages.sessions.access_sp', sp_name: decorated_session.sp_name)

p.mb2 = link_to t('links.access_help'),
  'https://login.gov/help/privacy-and-security/how-does-logingov-protect-my-data/'

= simple_form_for(@view_model.idv_form, url: verify_session_path,
    html: { autocomplete: 'off', method: :put, role: 'form' }) do |f|
  = f.error_notification
  fieldset.mb3.ml0.p0.border-none
    legend.col-12.mb2.pb-tiny.border-bottom.border-teal = t('account.index.full_name')
    = f.input :first_name, label: t('idv.form.first_name'), required: true
    = f.input :last_name, label: t('idv.form.last_name'), required: true

  fieldset.m0.p0.border-none
    p.mb1.fs-13p = t('forms.messages.current_address')
    legend.col-12.mb2.pb-tiny.border-bottom.border-teal = t('account.index.address')
    = f.input :address1, label: t('idv.form.address1'), required: true
    = f.input :address2, label: t('idv.form.address2')
    = f.input :city, label: t('idv.form.city'), required: true

    .clearfix.mxn1
      .sm-col.sm-col-6.px1
        - if decorated_session.sp_name
          -sp_error = t('idv.errors.unsupported_jurisdiction_sp',
            sp_name: decorated_session.sp_name)
        -data_attrs = { "data-supported-jurisdictions": supported_jurisdictions,
          "data-error-message": t('idv.errors.unsupported_jurisdiction'),
          "data-error-message-sp": sp_error,\
        }
        = f.input :state, collection: us_states_territories,
          label: t('idv.form.state'), required: true,
          input_html: data_attrs

      .sm-col.sm-col-4.px1
        / using :tel for mobile numeric keypad
        = f.input :zipcode, as: :tel,
          label: t('idv.form.zipcode'), required: true,
          pattern: '(\d{5}([\-]\d{4})?)',
          input_html: { class: 'zipcode', value: @view_model.idv_form.zipcode }
    .mb-tiny = t('idv.form.previous_address_html')
    = accordion('previous-address', t('idv.form.previous_address_add'),
      hide_header: true, hide_close_link: true) do
      fieldset.mt2.ml0.p0.border-none
        legend.col-12.my2.pb-tiny.border-bottom.border-teal = t('account.index.previous_address')
        = f.input :prev_address1, label: t('idv.form.address1')
        = f.input :prev_address2, label: t('idv.form.address2')
        = f.input :prev_city, label: t('idv.form.city')
        .clearfix.mxn1
          .sm-col.sm-col-6.px1
            = f.input :prev_state, collection: us_states_territories,
              label: t('idv.form.state'),
              input_html: { "data-supported-jurisdictions": supported_jurisdictions }
          .sm-col.sm-col-4.px1
            / using :tel for mobile numeric keypad
            = f.input :prev_zipcode, as: :tel,
              label: t('idv.form.zipcode'),
              pattern: '(\d{5}([\-]\d{4})?)',
              input_html: { class: 'zipcode', value: @view_model.idv_form.prev_zipcode }
  fieldset.m0.p0.border-none
    legend.col-12.mb2.pb-tiny.border-bottom.border-teal = t('idv.form.personal_details')
    / using :tel for mobile numeric keypad
    = f.input :dob, as: :tel,
      label: t('idv.form.dob'), required: true,
      hint: t('idv.form.dob_hint'), hint_html: { id: 'dob-instructs', class: 'mb1' },
      pattern: '(0[1-9]|1[012])/(0[1-9]|1[0-9]|2[0-9]|3[01])/[0-9]{4}',
      input_html: { class: 'dob',
        value: @view_model.idv_form.dob,
        'aria-describedby': 'dob-instructs' }
    / using :tel for mobile numeric keypad
    = f.input :ssn, as: :tel,
      label: t('idv.form.ssn_label_html', tooltip: tooltip(t('tooltips.ssn'))),
      required: true,
      pattern: '^\d{3}-?\d{2}-?\d{4}$',
      input_html: { class: 'ssn', value: @view_model.idv_form.ssn }
  fieldset.m0.p0.border-none
    legend.col-12.pb-tiny.border-bottom.border-teal = t('idv.form.state_id')
    p == t('idv.messages.id_number')
    = f.input :state_id_type, label: t('idv.form.state_id_type_label'),
      as: :select, include_blank: true, required: true,
      collection: state_id_types
    = f.input :state_id_number, label: t('idv.form.state_id'), required: true
    = accordion('state-id', t('idv.messages.state_id_accordion_header'),
      wrapper_css: 'mb0 col-12 fs-16p') do
      =simple_format(t('idv.messages.state_id_accordion_message', sp: decorated_session.sp_name))

  .mt3
    button type='submit' class='btn btn-primary btn-wide' = t('forms.buttons.continue')
= render 'shared/cancel', link: verify_cancel_path
= render @view_model.modal_partial, view_model: @view_model

== javascript_pack_tag 'previous-address'
