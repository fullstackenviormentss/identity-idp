#!/usr/bin/env ruby
require 'pathname'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path("../../",  __FILE__)

def run(command)
  abort "command failed (#{$?}): #{command}" unless system command
end

Dir.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts %q[
   _             _
  | |           (_)
  | | ___   __ _ _ _ __    __ _  _____   __
  | |/ _ \ / _` | | '_ \  / _` |/ _ \ \ / /
  | | (_) | (_| | | | | || (_| | (_) \ V /
  |_|\___/ \__, |_|_| |_(_)__, |\___/ \_/
            __/ |          __/ |
           |___/          |___/
  ]

  puts "== Copying application.yml =="
  run "cp config/application.yml.example config/application.yml"

  puts "== Copying logstash.conf =="
  run "cat logstash.conf.example | sed 's/path_to_repo/#{APP_ROOT.to_s.gsub('/', '\/')}/g' > logstash.conf"

  puts "== Copying sample certs and keys =="
  run "cp keys/saml.key.enc.example keys/saml.key.enc"
  run "cp certs/saml.crt.example certs/saml.crt"

  if ARGV.shift == "--docker" then
    run 'docker-compose build'
    run 'docker-compose run --rm web rake db:reset RAILS_ENV=development'
    run 'docker-compose run --rm web rake db:reset RAILS_ENV=test'
    run 'docker-compose up'
    exit
  end

  puts "\n== Example Key Generation =="
  run "which gpg || brew install gpg"
  run "bin/generate-example-keys"

  puts "\n== Installing dependencies =="
  run "gem install bundler --conservative"
  run 'gem install foreman --conservative && gem update foreman'
  run "bundle check || bundle install --without deploy production"
  run "npm install"
  run "npm run build"
  run "gem install mailcatcher"

  puts "\n== Preparing database =="
  run 'bin/rake db:environment:set RAILS_ENV=development db:reset'
  run 'bin/rake dev:prime RAILS_ENV=development'
  run 'bin/rake db:environment:set RAILS_ENV=test db:reset'

  puts "\n== Removing old logs and tempfiles =="
  run "rm -f log/*"
  run "rm -rf tmp/cache"

  puts "\n== Adding git hooks via Overcommit =="
  run 'overcommit --install'

  puts "\n== Restarting application server =="
  run "mkdir -p tmp"
  run "touch tmp/restart.txt"
end
